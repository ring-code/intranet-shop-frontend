{"list":[{"title":"module:AdminInsert","link":"<a href=\"module-AdminInsert.html\">AdminInsert</a>","description":"A component for adding new products to the admin panel. Allows the user to input product details,\nupload an image, and submit the form to the server."},{"title":"module:AdminInsert~FormData","link":"<a href=\"module-AdminInsert.html#~FormData\">FormData</a>"},{"title":"module:AdminInsert~handleChange","link":"<a href=\"module-AdminInsert.html#~handleChange\">handleChange</a>","description":"Updates the state for form fields when the user types in the input fields."},{"title":"module:AdminInsert~handleImageChange","link":"<a href=\"module-AdminInsert.html#~handleImageChange\">handleImageChange</a>","description":"Handles the selection of an image file, sets the image preview, and updates the form data."},{"title":"module:AdminInsert~handleSave","link":"<a href=\"module-AdminInsert.html#~handleSave\">handleSave</a>","description":"Submits the product data to the server if the form is valid.\nDisplays success or error messages based on the response."},{"title":"module:AdminInsert~validateFormData","link":"<a href=\"module-AdminInsert.html#~validateFormData\">validateFormData</a>","description":"Validates the form data to ensure all required fields are filled."},{"title":"module:AdminProductList","link":"<a href=\"module-AdminProductList.html\">AdminProductList</a>","description":"Works like ProductList, just links to the product edit page instead of adding to the cart."},{"title":"module:AdminProductUpdate","link":"<a href=\"module-AdminProductUpdate.html\">AdminProductUpdate</a>","description":"Admin page for editing and deleting Products"},{"title":"module:AdminProductUpdate~FormData\nForm data state to store product details.","link":"<a href=\"module-AdminProductUpdate.html#~FormDataFormdatastatetostoreproductdetails.\">FormData\nForm data state to store product details.</a>"},{"title":"module:AdminProductUpdate~handleChange\nHandles form field changes for title, price, and description.","link":"<a href=\"module-AdminProductUpdate.html#~handleChangeHandlesformfieldchangesfortitle,price,anddescription.\">handleChange\nHandles form field changes for title, price, and description.</a>"},{"title":"module:AdminProductUpdate~handleDelete\nHandles the deletion of a product after confirming with the user.","link":"<a href=\"module-AdminProductUpdate.html#~handleDeleteHandlesthedeletionofaproductafterconfirmingwiththeuser.\">handleDelete\nHandles the deletion of a product after confirming with the user.</a>"},{"title":"module:AdminProductUpdate~handleImageChange\nHandles image file change, updates the form data and image preview.","link":"<a href=\"module-AdminProductUpdate.html#~handleImageChangeHandlesimagefilechange,updatestheformdataandimagepreview.\">handleImageChange\nHandles image file change, updates the form data and image preview.</a>"},{"title":"module:AdminProductUpdate~handleSave\nHandles saving or updating product details to the server.\nSends formData including title, price, description, and image if present.","link":"<a href=\"module-AdminProductUpdate.html#~handleSaveHandlessavingorupdatingproductdetailstotheserver.SendsformDataincludingtitle,price,description,andimageifpresent.\">handleSave\nHandles saving or updating product details to the server.\nSends formData including title, price, description, and image if present.</a>"},{"title":"module:App","link":"<a href=\"module-App.html\">App</a>","description":"Main App component that handles routing, authentication state, and user session management.\nIt loads user data from localStorage on mount and sets up routing for both public and protected routes.\nIncludes logic for user login, logout, and cart management."},{"title":"module:App~AdminRoute\nEnsures that only users with admin privileges can access certain pages. If the user is not an admin, they are redirected to the home page.","link":"<a href=\"module-App.html#~AdminRouteEnsuresthatonlyuserswithadminprivilegescanaccesscertainpages.Iftheuserisnotanadmin,theyareredirectedtothehomepage.\">AdminRoute\nEnsures that only users with admin privileges can access certain pages. If the user is not an admin, they are redirected to the home page.</a>"},{"title":"module:App~handleLogout\nHandles user logout, removes all session-related data from localStorage,\nclears state, and redirects to the home page.","link":"<a href=\"module-App.html#~handleLogoutHandlesuserlogout,removesallsession-relateddatafromlocalStorage,clearsstate,andredirectstothehomepage.\">handleLogout\nHandles user logout, removes all session-related data from localStorage,\nclears state, and redirects to the home page.</a>"},{"title":"module:AuthUtil","link":"<a href=\"module-AuthUtil.html\">AuthUtil</a>","description":"Handles user login by sending a POST request with email and password, then processes the response.\nIf successful, stores the user's token, ID, email, and admin status in localStorage, \nsets login state, and navigates to the products page. If login fails, an error is displayed."},{"title":"module:Backbutton","link":"<a href=\"module-Backbutton.html\">Backbutton</a>","description":"Card-like button component to navigate backwards"},{"title":"module:Cart","link":"<a href=\"module-Cart.html\">Cart</a>","description":"Cart component where users can view and manage their shopping cart items.\nUsers can increase/decrease quantities of items, remove items, and place orders."},{"title":"module:CartContext","link":"<a href=\"module-CartContext.html\">CartContext</a>","description":"CartProvider component that manages the shopping cart state and provides context to its children.\nIt handles adding items to the cart, saving the cart to localStorage, and resetting the cart.\nAlso loads the cart from localStorage on initial mount."},{"title":"module:CartContext.useCart","link":"<a href=\"module-CartContext.html#.useCart\">useCart</a>","description":"Custom hook to access the CartContext."},{"title":"module:CartContext~handleAddToCart","link":"<a href=\"module-CartContext.html#~handleAddToCart\">handleAddToCart</a>","description":"Adds an item to the cart. If the item already exists in the cart, it increases the quantity.\nIf it's a new item, it adds it to the cart."},{"title":"module:CartContext~resetCart\nResets the cart to an empty array.","link":"<a href=\"module-CartContext.html#~resetCartResetsthecarttoanemptyarray.\">resetCart\nResets the cart to an empty array.</a>"},{"title":"module:CartIcon","link":"<a href=\"module-CartIcon.html\">CartIcon</a>","description":"Small shopping cart icon in the NavBar. Shows the Cart and the Number of items in it."},{"title":"module:Cart~calculateTotal\nCalculates the total price for all items in the cart.","link":"<a href=\"module-Cart.html#~calculateTotalCalculatesthetotalpriceforallitemsinthecart.\">calculateTotal\nCalculates the total price for all items in the cart.</a>"},{"title":"module:Cart~handleDecreaseQuantity\nDecreases the quantity of a product in the cart.\nIf the quantity reaches zero, it removes the product from the cart.","link":"<a href=\"module-Cart.html#~handleDecreaseQuantityDecreasesthequantityofaproductinthecart.Ifthequantityreacheszero,itremovestheproductfromthecart.\">handleDecreaseQuantity\nDecreases the quantity of a product in the cart.\nIf the quantity reaches zero, it removes the product from the cart.</a>"},{"title":"module:Cart~handleIncreaseQuantity\nIncreases the quantity of a product in the cart.","link":"<a href=\"module-Cart.html#~handleIncreaseQuantityIncreasesthequantityofaproductinthecart.\">handleIncreaseQuantity\nIncreases the quantity of a product in the cart.</a>"},{"title":"module:Cart~handleRemoveFromCart\nRemoves an item from the cart.","link":"<a href=\"module-Cart.html#~handleRemoveFromCartRemovesanitemfromthecart.\">handleRemoveFromCart\nRemoves an item from the cart.</a>"},{"title":"module:Cart~placeOrder\nPlaces the order for the products in the cart by sending a request to the server.\nClears the cart and navigates to the orders page upon successful order placement.","link":"<a href=\"module-Cart.html#~placeOrderPlacestheorderfortheproductsinthecartbysendingarequesttotheserver.Clearsthecartandnavigatestotheorderspageuponsuccessfulorderplacement.\">placeOrder\nPlaces the order for the products in the cart by sending a request to the server.\nClears the cart and navigates to the orders page upon successful order placement.</a>"},{"title":"module:Login","link":"<a href=\"module-Login.html\">Login</a>","description":"This component allows users to log in by providing an email and password. \nIt communicates with an authentication API and sets the user's login status and role."},{"title":"module:Login~Login","link":"<a href=\"module-Login.html#~Login\">Login</a>"},{"title":"module:Login~handleSubmit","link":"<a href=\"module-Login.html#~handleSubmit\">handleSubmit</a>","description":"Handles the form submission for logging in. It calls the loginUser function to authenticate the user and sets the login status."},{"title":"module:Navigation","link":"<a href=\"module-Navigation.html\">Navigation</a>","description":"Navigation component handles the navigation bar and updates based on the user's login state.\nIt also synchronizes user information."},{"title":"module:Orders","link":"<a href=\"module-Orders.html\">Orders</a>","description":"This component displays a list of orders for the currently logged-in user. \nIt fetches the orders from the server and shows order details including the products, their quantities, \nprices, and the total amount for each order. It also handles loading and error states."},{"title":"module:Orders~handleCardClick","link":"<a href=\"module-Orders.html#~handleCardClick\">handleCardClick</a>","description":"Navigates to the product detail page when a product card is clicked."},{"title":"module:Orders~useEffect","link":"<a href=\"module-Orders.html#~useEffect\">useEffect</a>","description":"Runs when the component mounts to fetch the orders for the user from the server.\nSets the orders state, and handles loading and error states."},{"title":"module:ProductDetails","link":"<a href=\"module-ProductDetails.html\">ProductDetails</a>","description":"A component that displays detailed information about a selected product.\nIt allows users to view the product's image, title, price, and additional details.\nUsers can add the product to their cart from this page."},{"title":"module:ProductList","link":"<a href=\"module-ProductList.html\">ProductList</a>","description":"ProductList component fetches a list of products from the server,\ndisplays them in cards, and allows users to view details or add products to the cart."},{"title":"module:ProductList~fetchProducts","link":"<a href=\"module-ProductList.html#~fetchProducts\">fetchProducts</a>","description":"Fetch products from the server and handle errors or loading state."},{"title":"module:ProductList~handleCardClick","link":"<a href=\"module-ProductList.html#~handleCardClick\">handleCardClick</a>","description":"Handle the click event on a product card to navigate to its detail page."},{"title":"module:ProductList~handleCloseModal","link":"<a href=\"module-ProductList.html#~handleCloseModal\">handleCloseModal</a>","description":"Close the modal when called."},{"title":"module:ProductList~handleImageClick","link":"<a href=\"module-ProductList.html#~handleImageClick\">handleImageClick</a>","description":"Handle the click event on an image to open the product image in a modal."},{"title":"module:RegistrationForm","link":"<a href=\"module-RegistrationForm.html\">RegistrationForm</a>","description":"A registration form component that allows users to register by providing an email, password, \nand confirming the password. Upon successful registration, users are automatically logged in."},{"title":"module:RegistrationForm~handleInputChange\nHandles the change of input fields and updates the corresponding state.","link":"<a href=\"module-RegistrationForm.html#~handleInputChangeHandlesthechangeofinputfieldsandupdatesthecorrespondingstate.\">handleInputChange\nHandles the change of input fields and updates the corresponding state.</a>"},{"title":"module:RegistrationForm~handleSubmit\nHandles the form submission, including validation and registration logic.\nIt ensures the password and password confirmation match before sending a registration request.","link":"<a href=\"module-RegistrationForm.html#~handleSubmitHandlestheformsubmission,includingvalidationandregistrationlogic.Itensuresthepasswordandpasswordconfirmationmatchbeforesendingaregistrationrequest.\">handleSubmit\nHandles the form submission, including validation and registration logic.\nIt ensures the password and password confirmation match before sending a registration request.</a>"}]}